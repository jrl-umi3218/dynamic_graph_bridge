#!/usr/bin/env python
#
# Listens to TransformStamped messages and publish them to tf
#

import roslib
roslib.load_manifest('dynamic_graph_bridge')
import rospy

import tf
import geometry_msgs.msg

frame = ''
childFrame = ''

def pose_broadcaster(msg):
    if frame:
        msg.header.frame_id = frame
    if childFrame:
        msg.child_frame_id = childFrame
    tfbr = tf.TransformBroadcaster()
    tfbr.sendTransform((msg.transform.translation.x, msg.transform.translation.y, msg.transform.translation.z),
                       (msg.transform.rotation.x, msg.transform.rotation.y, msg.transform.rotation.z,  msg.transform.rotation.w),
                       rospy.Time.now(), msg.child_frame_id, msg.header.frame_id)

if __name__ == '__main__':
    rospy.init_node('robot_pose_publisher', anonymous=True)

    frame = rospy.get_param('~frame', '')
    childFrame = rospy.get_param('~child_frame', '')
    topic = rospy.get_param('~topic', 'robot_pose')
    
    rospy.Subscriber(topic, geometry_msgs.msg.TransformStamped, pose_broadcaster)
    rospy.spin()
